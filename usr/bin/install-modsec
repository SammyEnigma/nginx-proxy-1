#!/bin/bash
set -e

# Add build dependencies
apt-get update
apt-get install -y --no-install-recommends \
    apt-utils \
    autoconf automake build-essential pkgconf \
    git \
    libcurl4-openssl-dev \
    libgeoip-dev liblmdb-dev libpcre++-dev libtool libxml2-dev libyajl-dev \
    zlib1g-dev

# Compile ModSecurity
git clone --recursive --depth 1 -b ${NGINX_MODSEC_VERSION} --single-branch https://github.com/SpiderLabs/ModSecurity
cd ModSecurity
git submodule init
git submodule update
./build.sh
./configure
make
make install
cp ./unicode.mapping /tmp/unicode.mapping
cd .. 
rm -rf ModSecurity

# Compile Nginx Module
git clone --depth 1 https://github.com/SpiderLabs/ModSecurity-nginx.git
wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz
tar zxvf nginx-${NGINX_VERSION}.tar.gz
rm nginx-${NGINX_VERSION}.tar.gz
cd nginx-${NGINX_VERSION}
./configure --with-compat --add-dynamic-module=../ModSecurity-nginx
make modules
# Copy compiled module into OS nginx miodules
cp objs/ngx_http_modsecurity_module.so /etc/nginx/modules
cd .. 
# Cleanup
rm -rf nginx-${NGINX_VERSION} 
rm -rf ModSecurity-nginx

# Enable module
sed -i -e 's/user  nginx;/load_module modules\/ngx_http_modsecurity_module.so;\nuser  nginx;/' /etc/nginx/nginx.conf

# Clean up build dependencies
apt-get remove -y \
    apt-utils \
    autoconf automake build-essential \
    git \
    pkgconf
apt-get autoremove -y
apt-get clean 
rm -rf /var/lib/apt/lists/*
